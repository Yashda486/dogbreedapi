{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","city","setcity","search","setsearch","useEffect","a","url","fetch","response","json","resJson","fetchApi","className","style","color","id","onChange","e","target","value","padding","bred_for","life_span","breed_group","temperament","reference_image_id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMA+EeA,EA3EH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAcA,OAVAC,qBAAU,YACQ,uCAAG,gCAAAC,EAAA,6DACTC,EADS,uDAC6CJ,EAD7C,0DAEQK,MAAMD,GAFd,cAETE,EAFS,gBAGMA,EAASC,OAHf,OAGVC,EAHU,OAIhBT,EAAQS,EAAQ,IAJA,2CAAH,qDAMdC,KACF,CAACT,IAGD,mCACE,sBAAKU,UAAU,kBAAf,UACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,mBAAd,SAAiC,wBAAQC,MAAO,CAACC,MAAM,WAAtB,8BAGrC,qBAAKF,UAAU,MAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,yBAAQG,GAAG,WAAWC,SAvBhC,SAAeC,GACbd,EAAUc,EAAEC,OAAOC,QAsB4BN,MAAO,CAACO,QAAQ,QAAvD,UACA,4DACE,wBAAQD,MAAM,gBAAd,2BACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,eAAd,0BACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,gBAAd,2BACA,wBAAQA,MAAM,mBAAd,8BACA,wBAAQA,MAAM,6BAAd,wCACA,wBAAQA,MAAM,0BAAd,qCACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,4BAAd,uCACA,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,yBAAd,oCACA,wBAAQA,MAAM,qBAAd,gCACA,wBAAQA,MAAM,wBAAd,mCACA,wBAAQA,MAAM,oBAAd,+BACA,wBAAQA,MAAM,sBAAd,iCACA,wBAAQA,MAAM,UAAd,4BAKN,qBAAKP,UAAU,MAAf,SACE,qBAAKA,UAAU,6BAAf,SAEHZ,EAEC,qCACA,qBAAIY,UAAU,SAAd,kBAA4B,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKe,QACtD,qBAAIH,UAAU,SAAd,wBAAkC,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKqB,cAChE,qBAAIT,UAAU,SAAd,yBAAmC,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKsB,eACjE,qBAAIV,UAAU,SAAd,2BAAqC,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKuB,iBACnE,qBAAIX,UAAU,SAAd,2BAAqC,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKwB,iBACnE,qBAAIZ,UAAU,SAAd,4BAAsC,sBAAMA,UAAU,QAAhB,SAAyBZ,EAAKyB,2BARlE,oBAAIZ,MAAO,CAACC,MAAM,cAAlB,qCC/CCY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.9b2fe320.chunk.js","sourcesContent":["\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport { useState, useEffect } from \"react\";\nconst App = () => {\n  const [city, setcity] = useState([]);\n  const [search, setsearch] = useState(\"\");\n  function input(e) {\n    setsearch(e.target.value);\n  }\n  useEffect(() => {\n      const fetchApi = async () => {\n        const url = `https://api.thedogapi.com/v1/breeds/search?q=${search}&api_key=0dbf6e72-131d-4aea-bfc5-1a47d2dcf958`;\n        const response = await fetch(url);\n       const resJson = await response.json();\n       setcity(resJson[0])\n      };\n      fetchApi();\n  },[search]);\n  \n  return (\n    <>\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <h1 className=\"text-center mt-5\"><strong style={{color:\"darkred\"}}>Dog Breeds</strong></h1>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center mt-4\">\n            <select id=\"mySelect\" onChange={input} style={{padding:\"10px\"}}>\n            <option >--Choose dog's breed--</option>\n              <option value=\"Affenpinscher\">Affenpinscher</option>\n              <option value=\"Afghan Hound\">Afghan Hound</option>\n              <option value=\"Basset Hound\">Basset Hound</option> \n              <option value=\"Airedale Terrier\">Airedale Terrier</option>\n              <option value=\"Akbash Dog\">Akbash Dog</option>\n              <option value=\"Akita\">Akita</option>\n              <option value=\"Alaskan Husky\">Alaskan Husky</option>\n              <option value=\"Alaskan Malamute\">Alaskan Malamute</option>\n              <option value=\"Alapaha Blue Blood Bulldog\">Alapaha Blue Blood Bulldog</option>\n              <option value=\"Basset Bleu de Gascogne\">Basset Bleu de Gascogne</option>\n              <option value=\"Basenji\">Basenji</option>\n              <option value=\"American Foxhound\">American Foxhound</option>\n              <option value=\"American Pit Bull Terrier\">American Pit Bull Terrier</option>\n              <option value=\"American Water Spaniel\">American Water Spaniel</option>\n              <option value=\"Anatolian Shepherd Dog\">Anatolian Shepherd Dog</option>\n              <option value=\"Australian Terrier\">Australian Terrier</option>\n              <option value=\"Australian Cattle Dog\">Australian Cattle Dog</option>\n              <option value=\"Australian Kelpie\">Australian Kelpie</option>\n              <option value=\"Australian Shepherd\">Australian Shepherd</option>\n              <option value=\"Azawakh\">Azawakh</option>\n              \n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center mt-4\">\n          {\n      !city?( <h2 style={{color:\"darkpurple\"}}>No Data Found</h2> ):\n      (\n        <>\n        <h2 className=\"aquase\">ID : <span className=\"aquas\">{city.id}</span></h2>\n            <h2 className=\"aquase\">Bred for : <span className=\"aquas\">{city.bred_for}</span></h2>\n            <h2 className=\"aquase\">Life Span : <span className=\"aquas\">{city.life_span}</span></h2>\n            <h2 className=\"aquase\"> Breed group :<span className=\"aquas\">{city.breed_group}</span></h2>\n            <h2 className=\"aquase\">Temperament : <span className=\"aquas\">{city.temperament}</span></h2>\n            <h2 className=\"aquase\">Reference Id : <span className=\"aquas\">{city.reference_image_id}</span></h2>\n           \n</> \n     )\n    }\n          </div>\n        </div>\n      </div>\n      \n    </>\n  );\n};\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}